/*
 * generated by Xtext 2.21.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUno
entryRuleUno
:
{ before(grammarAccess.getUnoRule()); }
	 ruleUno
{ after(grammarAccess.getUnoRule()); } 
	 EOF 
;

// Rule Uno
ruleUno 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnoAccess().getGroup()); }
		(rule__Uno__Group__0)
		{ after(grammarAccess.getUnoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOriginal
entryRuleOriginal
:
{ before(grammarAccess.getOriginalRule()); }
	 ruleOriginal
{ after(grammarAccess.getOriginalRule()); } 
	 EOF 
;

// Rule Original
ruleOriginal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOriginalAccess().getGroup()); }
		(rule__Original__Group__0)
		{ after(grammarAccess.getOriginalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariant
entryRuleVariant
:
{ before(grammarAccess.getVariantRule()); }
	 ruleVariant
{ after(grammarAccess.getVariantRule()); } 
	 EOF 
;

// Rule Variant
ruleVariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariantAccess().getAlternatives()); }
		(rule__Variant__Alternatives)
		{ after(grammarAccess.getVariantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChallenge
entryRuleChallenge
:
{ before(grammarAccess.getChallengeRule()); }
	 ruleChallenge
{ after(grammarAccess.getChallengeRule()); } 
	 EOF 
;

// Rule Challenge
ruleChallenge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChallengeAccess().getChallengeKeyword()); }
		'Challenge.'
		{ after(grammarAccess.getChallengeAccess().getChallengeKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardsEffect
entryRuleCardsEffect
:
{ before(grammarAccess.getCardsEffectRule()); }
	 ruleCardsEffect
{ after(grammarAccess.getCardsEffectRule()); } 
	 EOF 
;

// Rule CardsEffect
ruleCardsEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardsEffectAccess().getGroup()); }
		(rule__CardsEffect__Group__0)
		{ after(grammarAccess.getCardsEffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterception
entryRuleInterception
:
{ before(grammarAccess.getInterceptionRule()); }
	 ruleInterception
{ after(grammarAccess.getInterceptionRule()); } 
	 EOF 
;

// Rule Interception
ruleInterception 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterceptionAccess().getInterceptionKeyword()); }
		'Interception.'
		{ after(grammarAccess.getInterceptionAccess().getInterceptionKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCumulatingMalus
entryRuleCumulatingMalus
:
{ before(grammarAccess.getCumulatingMalusRule()); }
	 ruleCumulatingMalus
{ after(grammarAccess.getCumulatingMalusRule()); } 
	 EOF 
;

// Rule CumulatingMalus
ruleCumulatingMalus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCumulatingMalusAccess().getGroup()); }
		(rule__CumulatingMalus__Group__0)
		{ after(grammarAccess.getCumulatingMalusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHandsDown
entryRuleHandsDown
:
{ before(grammarAccess.getHandsDownRule()); }
	 ruleHandsDown
{ after(grammarAccess.getHandsDownRule()); } 
	 EOF 
;

// Rule HandsDown
ruleHandsDown 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHandsDownAccess().getGroup()); }
		(rule__HandsDown__Group__0)
		{ after(grammarAccess.getHandsDownAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWithoutMalus
entryRuleWithoutMalus
:
{ before(grammarAccess.getWithoutMalusRule()); }
	 ruleWithoutMalus
{ after(grammarAccess.getWithoutMalusRule()); } 
	 EOF 
;

// Rule WithoutMalus
ruleWithoutMalus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWithoutMalusAccess().getGroup()); }
		(rule__WithoutMalus__Group__0)
		{ after(grammarAccess.getWithoutMalusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getOriginalParserRuleCall_2_0()); }
		ruleOriginal
		{ after(grammarAccess.getRuleAccess().getOriginalParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getVariantsAssignment_2_1()); }
		(rule__Rule__VariantsAssignment_2_1)*
		{ after(grammarAccess.getRuleAccess().getVariantsAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantAccess().getChallengeParserRuleCall_0()); }
		ruleChallenge
		{ after(grammarAccess.getVariantAccess().getChallengeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariantAccess().getCardsEffectParserRuleCall_1()); }
		ruleCardsEffect
		{ after(grammarAccess.getVariantAccess().getCardsEffectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariantAccess().getInterceptionParserRuleCall_2()); }
		ruleInterception
		{ after(grammarAccess.getVariantAccess().getInterceptionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariantAccess().getCumulatingMalusParserRuleCall_3()); }
		ruleCumulatingMalus
		{ after(grammarAccess.getVariantAccess().getCumulatingMalusParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getVariantAccess().getHandsDownParserRuleCall_4()); }
		ruleHandsDown
		{ after(grammarAccess.getVariantAccess().getHandsDownParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getVariantAccess().getWithoutMalusParserRuleCall_5()); }
		ruleWithoutMalus
		{ after(grammarAccess.getVariantAccess().getWithoutMalusParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardsEffectAccess().getGroup_2_0()); }
		(rule__CardsEffect__Group_2_0__0)
		{ after(grammarAccess.getCardsEffectAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardsEffectAccess().getGroup_2_1()); }
		(rule__CardsEffect__Group_2_1__0)
		{ after(grammarAccess.getCardsEffectAccess().getGroup_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getCardsEffectAccess().getGroup_2_2()); }
		(rule__CardsEffect__Group_2_2__0)
		{ after(grammarAccess.getCardsEffectAccess().getGroup_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCumulatingMalusAccess().getGroup_2_0()); }
		(rule__CumulatingMalus__Group_2_0__0)
		{ after(grammarAccess.getCumulatingMalusAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCumulatingMalusAccess().getGroup_2_1()); }
		(rule__CumulatingMalus__Group_2_1__0)
		{ after(grammarAccess.getCumulatingMalusAccess().getGroup_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getCumulatingMalusAccess().getGroup_2_2()); }
		(rule__CumulatingMalus__Group_2_2__0)
		{ after(grammarAccess.getCumulatingMalusAccess().getGroup_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__0__Impl
	rule__Uno__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getUNOKeyword_0()); }
	'UNO'
	{ after(grammarAccess.getUnoAccess().getUNOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__1__Impl
	rule__Uno__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getGameKeyword_1()); }
	'game'
	{ after(grammarAccess.getUnoAccess().getGameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__2__Impl
	rule__Uno__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getGameAssignment_2()); }
	(rule__Uno__GameAssignment_2)
	{ after(grammarAccess.getUnoAccess().getGameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__3__Impl
	rule__Uno__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getUnoAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__4__Impl
	rule__Uno__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnoAccess().getRulesAssignment_4()); }
		(rule__Uno__RulesAssignment_4)
		{ after(grammarAccess.getUnoAccess().getRulesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getUnoAccess().getRulesAssignment_4()); }
		(rule__Uno__RulesAssignment_4)*
		{ after(grammarAccess.getUnoAccess().getRulesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uno__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnoAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getUnoAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRulesKeyword_0()); }
	'Rules'
	{ after(grammarAccess.getRuleAccess().getRulesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAlternatives_2()); }
	(rule__Rule__Alternatives_2)
	{ after(grammarAccess.getRuleAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Original__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Original__Group__0__Impl
	rule__Original__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginalAccess().getOriginalKeyword_0()); }
	'Original'
	{ after(grammarAccess.getOriginalAccess().getOriginalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Original__Group__1__Impl
	rule__Original__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginalAccess().getRulesKeyword_1()); }
	'rules.'
	{ after(grammarAccess.getOriginalAccess().getRulesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Original__Group__2__Impl
	rule__Original__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginalAccess().getPlayKeyword_2()); }
	'Play'
	{ after(grammarAccess.getOriginalAccess().getPlayKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Original__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOriginalAccess().getExclamationMarkKeyword_3()); }
	'!'
	{ after(grammarAccess.getOriginalAccess().getExclamationMarkKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardsEffect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group__0__Impl
	rule__CardsEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getCardsKeyword_0()); }
	'Cards'
	{ after(grammarAccess.getCardsEffectAccess().getCardsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group__1__Impl
	rule__CardsEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCardsEffectAccess().getEffectsKeyword_1()); }
		('effects:')
		{ after(grammarAccess.getCardsEffectAccess().getEffectsKeyword_1()); }
	)
	(
		{ before(grammarAccess.getCardsEffectAccess().getEffectsKeyword_1()); }
		('effects:')*
		{ after(grammarAccess.getCardsEffectAccess().getEffectsKeyword_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getAlternatives_2()); }
	(rule__CardsEffect__Alternatives_2)
	{ after(grammarAccess.getCardsEffectAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardsEffect__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_0__0__Impl
	rule__CardsEffect__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getCardKeyword_2_0_0()); }
	'card'
	{ after(grammarAccess.getCardsEffectAccess().getCardKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getDigitZeroFullStopKeyword_2_0_1()); }
	'0.'
	{ after(grammarAccess.getCardsEffectAccess().getDigitZeroFullStopKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardsEffect__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_1__0__Impl
	rule__CardsEffect__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getCardKeyword_2_1_0()); }
	'card'
	{ after(grammarAccess.getCardsEffectAccess().getCardKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getDigitSevenFullStopKeyword_2_1_1()); }
	'7.'
	{ after(grammarAccess.getCardsEffectAccess().getDigitSevenFullStopKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardsEffect__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_2__0__Impl
	rule__CardsEffect__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getCardKeyword_2_2_0()); }
	'card'
	{ after(grammarAccess.getCardsEffectAccess().getCardKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_2__1__Impl
	rule__CardsEffect__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getDigitZeroKeyword_2_2_1()); }
	'0'
	{ after(grammarAccess.getCardsEffectAccess().getDigitZeroKeyword_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_2__2__Impl
	rule__CardsEffect__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getAndKeyword_2_2_2()); }
	'and'
	{ after(grammarAccess.getCardsEffectAccess().getAndKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_2__3__Impl
	rule__CardsEffect__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getCardKeyword_2_2_3()); }
	'card'
	{ after(grammarAccess.getCardsEffectAccess().getCardKeyword_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardsEffect__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardsEffect__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardsEffectAccess().getDigitSevenFullStopKeyword_2_2_4()); }
	'7.'
	{ after(grammarAccess.getCardsEffectAccess().getDigitSevenFullStopKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CumulatingMalus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group__0__Impl
	rule__CumulatingMalus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getCumulatingKeyword_0()); }
	'Cumulating'
	{ after(grammarAccess.getCumulatingMalusAccess().getCumulatingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group__1__Impl
	rule__CumulatingMalus__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCumulatingMalusAccess().getMalusKeyword_1()); }
		('malus:')
		{ after(grammarAccess.getCumulatingMalusAccess().getMalusKeyword_1()); }
	)
	(
		{ before(grammarAccess.getCumulatingMalusAccess().getMalusKeyword_1()); }
		('malus:')*
		{ after(grammarAccess.getCumulatingMalusAccess().getMalusKeyword_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getAlternatives_2()); }
	(rule__CumulatingMalus__Alternatives_2)
	{ after(grammarAccess.getCumulatingMalusAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CumulatingMalus__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_0__0__Impl
	rule__CumulatingMalus__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getOnlyKeyword_2_0_0()); }
	'Only'
	{ after(grammarAccess.getCumulatingMalusAccess().getOnlyKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_0__1__Impl
	rule__CumulatingMalus__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_0_1()); }
	'plus'
	{ after(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getDigitTwoFullStopKeyword_2_0_2()); }
	'2.'
	{ after(grammarAccess.getCumulatingMalusAccess().getDigitTwoFullStopKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CumulatingMalus__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_1__0__Impl
	rule__CumulatingMalus__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getOnlyKeyword_2_1_0()); }
	'Only'
	{ after(grammarAccess.getCumulatingMalusAccess().getOnlyKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_1__1__Impl
	rule__CumulatingMalus__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_1_1()); }
	'plus'
	{ after(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getDigitFourFullStopKeyword_2_1_2()); }
	'4.'
	{ after(grammarAccess.getCumulatingMalusAccess().getDigitFourFullStopKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CumulatingMalus__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_2__0__Impl
	rule__CumulatingMalus__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_2_0()); }
	'plus'
	{ after(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_2__1__Impl
	rule__CumulatingMalus__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getDigitTwoKeyword_2_2_1()); }
	'2'
	{ after(grammarAccess.getCumulatingMalusAccess().getDigitTwoKeyword_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_2__2__Impl
	rule__CumulatingMalus__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getAndKeyword_2_2_2()); }
	'and'
	{ after(grammarAccess.getCumulatingMalusAccess().getAndKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_2__3__Impl
	rule__CumulatingMalus__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_2_3()); }
	'plus'
	{ after(grammarAccess.getCumulatingMalusAccess().getPlusKeyword_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CumulatingMalus__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CumulatingMalus__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCumulatingMalusAccess().getDigitFourFullStopKeyword_2_2_4()); }
	'4.'
	{ after(grammarAccess.getCumulatingMalusAccess().getDigitFourFullStopKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HandsDown__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HandsDown__Group__0__Impl
	rule__HandsDown__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HandsDown__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHandsDownAccess().getHandsKeyword_0()); }
	'Hands'
	{ after(grammarAccess.getHandsDownAccess().getHandsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HandsDown__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HandsDown__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HandsDown__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHandsDownAccess().getDownKeyword_1()); }
	'down.'
	{ after(grammarAccess.getHandsDownAccess().getDownKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithoutMalus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithoutMalus__Group__0__Impl
	rule__WithoutMalus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithoutMalus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithoutMalusAccess().getWithoutKeyword_0()); }
	'Without'
	{ after(grammarAccess.getWithoutMalusAccess().getWithoutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithoutMalus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithoutMalus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithoutMalus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithoutMalusAccess().getMalusKeyword_1()); }
	'malus.'
	{ after(grammarAccess.getWithoutMalusAccess().getMalusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Uno__GameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoAccess().getGameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getUnoAccess().getGameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uno__RulesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnoAccess().getRulesRuleParserRuleCall_4_0()); }
		ruleRule
		{ after(grammarAccess.getUnoAccess().getRulesRuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__VariantsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getVariantsVariantParserRuleCall_2_1_0()); }
		ruleVariant
		{ after(grammarAccess.getRuleAccess().getVariantsVariantParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
